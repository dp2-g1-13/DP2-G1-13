package org.springframework.samples.flatbook.utils.assertj;

import org.springframework.samples.flatbook.model.dtos.PersonForm;

/**
 * {@link PersonForm} specific assertions - Generated by CustomAssertionGenerator.
 *
 * Although this class is not final to allow Soft assertions proxy, if you wish to extend it,
 * extend {@link AbstractPersonFormAssert} instead.
 */
@javax.annotation.Generated(value="assertj-assertions-generator")
public class PersonFormAssert extends AbstractPersonFormAssert<PersonFormAssert, PersonForm> {

  /**
   * Creates a new <code>{@link PersonFormAssert}</code> to make assertions on actual PersonForm.
   * @param actual the PersonForm we want to make assertions on.
   */
  public PersonFormAssert(PersonForm actual) {
    super(actual, PersonFormAssert.class);
  }

  /**
   * An entry point for PersonFormAssert to follow AssertJ standard <code>assertThat()</code> statements.<br>
   * With a static import, one can write directly: <code>assertThat(myPersonForm)</code> and get specific assertion with code completion.
   * @param actual the PersonForm we want to make assertions on.
   * @return a new <code>{@link PersonFormAssert}</code>
   */
  @org.assertj.core.util.CheckReturnValue
  public static PersonFormAssert assertThat(PersonForm actual) {
    return new PersonFormAssert(actual);
  }
}
